include:
  - project: 'Northern.tech/Mender/mendertesting'
    file:
      - '.gitlab-ci-check-commits.yml'
      - '.gitlab-ci-github-status-updates.yml'
      - '.gitlab-ci-check-license.yml'

stages:
  - build
  - test

variables:
  MENDER_MCU_REVISION: main
  IMAGE_VERSION: main
  DOCKER_VERSION:
    value: "27.3"
    description: "Version of docker to use in pipelines"

.boards-matrix:
  parallel:
    matrix:
      - MENDER_MCU_BOARD: [
            nrf52840dk/nrf52840,
            esp32_ethernet_kit/esp32/procpu,
            esp32s3_devkitc/esp32s3/procpu,
            olimex_esp32_evb/esp32/procpu,
            mr_canhubk3,
            native_sim
          ]

.build-template:
  tags:
    - hetzner-amd-beefy
  stage: build
  variables:
    CONTAINER_TAG: "west-workspace"

build:workspace:
  extends: .build-template
  services:
    - name: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/docker:${DOCKER_VERSION}-dind
      alias: docker
  script:
    - echo "INFO - Building and Pushing ${CONTAINER_TAG}-${CI_PIPELINE_ID} to the registry ${CI_REGISTRY_IMAGE}"
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
    - docker build
        --cache-from ${CI_REGISTRY_IMAGE}:${CONTAINER_TAG}-main
        --file Dockerfile.ci
        --tag ${CI_REGISTRY_IMAGE}:${CONTAINER_TAG}-${CI_COMMIT_BRANCH}
        --push
        .
    - echo "IMAGE_VERSION=$CI_COMMIT_BRANCH" >> image_version.env
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
    # Rebuild the workspace image if the Dockerfile.ci or west.yml changes
    - changes:
        paths:
          - Dockerfile.ci
          - west.yml
        compare_to: main
  artifacts:
    reports:
      dotenv: image_version.env


build:board:
  extends: .build-template
  image: ${CI_REGISTRY_IMAGE}:${CONTAINER_TAG}-${IMAGE_VERSION}
  needs:
    - job: build:workspace
      optional: true
  script:
    - cd /zephyr-workspace-cache
    - west update --narrow -o=--depth=1 --path-cache /zephyr-workspace-cache
    - echo "Building for ${MENDER_MCU_BOARD} with revision ${MENDER_MCU_REVISION}"
    - cd modules/mender-mcu && git fetch mender
    - git checkout mender/${MENDER_MCU_REVISION} && cd -
    - west build --board ${MENDER_MCU_BOARD} ${CI_PROJECT_DIR}
  parallel: !reference [.boards-matrix, parallel]
