include:
  - project: 'Northern.tech/Mender/mendertesting'
    file:
      - '.gitlab-ci-check-commits.yml'
      - '.gitlab-ci-github-status-updates.yml'
      - '.gitlab-ci-check-license.yml'

stages:
  - build
  - test
  - test:integration
  - publish

variables:
  MENDER_MCU_REVISION:
    value: "main"
    description: "Mender MCU Revision - use commit SHA"
  IMAGE_VERSION:
    value: "main"
    description: |
      Version of the west-workspace image to use.
      Follows gitlab branch of mender-mcu-integration.
      Revision updated automatically in jobs that re-build the workspace.
  CONTAINER_TAG:
    value: "west-workspace"
    description: "Tag for the workspace image"
  DOCKER_VERSION:
    value: "27.3"
    description: "Version of docker to use in pipelines"

.boards-matrix:
  parallel:
    matrix:
      - MENDER_MCU_BOARD: [
            nrf52840dk/nrf52840,
            esp32_ethernet_kit/esp32/procpu,
            esp32s3_devkitc/esp32s3/procpu,
            olimex_esp32_evb/esp32/procpu,
            native_sim
          ]

.build:template:
  tags:
    - hetzner-amd-beefy
  stage: build

build:workspace:
  extends: .build:template
  services:
    - name: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/docker:${DOCKER_VERSION}-dind
      alias: docker
  script:
    - echo "INFO - Building and Pushing ${CONTAINER_TAG}-${CI_PIPELINE_ID} to the registry ${CI_REGISTRY_IMAGE}"
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
    - docker build
        --cache-from ${CI_REGISTRY_IMAGE}:${CONTAINER_TAG}-main
        --file Dockerfile.ci
        --tag ${CI_REGISTRY_IMAGE}:${CONTAINER_TAG}-${CI_COMMIT_BRANCH}
        --push
        .
    - echo "IMAGE_VERSION=$CI_COMMIT_BRANCH" >> image_version.env
  rules:
    - if: $CI_COMMIT_BRANCH == "main" && $CI_PIPELINE_SOURCE != "pipeline"
    # Rebuild the workspace image if the Dockerfile.ci or west.yml changes
    - changes:
        paths:
          - Dockerfile.ci
          - west.yml
        compare_to: main
  artifacts:
    reports:
      dotenv: image_version.env


build:board:
  extends: .build:template
  image: ${CI_REGISTRY_IMAGE}:${CONTAINER_TAG}-${IMAGE_VERSION}
  needs:
    - job: build:workspace
      optional: true
  script:
    - cd /zephyr-workspace-cache
    - west update --narrow -o=--depth=1 --path-cache /zephyr-workspace-cache
    - echo "Building for ${MENDER_MCU_BOARD} with revision ${MENDER_MCU_REVISION}"
    - cd modules/mender-mcu && git fetch mender ${MENDER_MCU_REVISION}
    - git checkout FETCH_HEAD && cd -
    - west build --board ${MENDER_MCU_BOARD} ${CI_PROJECT_DIR} -- -DCONFIG_MENDER_ARTIFACT_NAME=\"release-1\"
  parallel: !reference [.boards-matrix, parallel]

test:integration:
  extends: .build:template
  image: ${CI_REGISTRY_IMAGE}:${CONTAINER_TAG}-${IMAGE_VERSION}
  stage: test:integration
  tags:
    - zephyr-hetzner
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
    GIT_SUBMODULE_DEPTH: 1
    TEST_AUTH_TOKEN: $HOSTED_MENDER_TEST_ACCESS_TOKEN
    ZEPHYR_BASE: "/zephyr-workspace-cache/zephyr"
  needs:
    - job: build:workspace
      optional: true
  script:
    - cd /zephyr-workspace-cache
    - west update --narrow -o=--depth=1 --path-cache /zephyr-workspace-cache
    - cd modules/mender-mcu && git fetch mender ${MENDER_MCU_REVISION}
    - git checkout FETCH_HEAD && cd -
    - cd ${CI_PROJECT_DIR}/tests/integration
    - pip install --ignore-installed --break-system-packages -r mender_server/backend/tests/requirements-integration.txt
    - pytest -v --host hosted.mender.io
  rules:
    - if: $CI_COMMIT_REF_PROTECTED == "true"
  artifacts:
    paths:
      - tests/integration/coverage.lcov

publish:tests:
  stage: publish
  image: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/python:3.11
  dependencies:
    - test:integration
  before_script:
    # https://github.com/coverallsapp/coverage-reporter
    - wget -qO- https://coveralls.io/coveralls-linux.tar.gz | tar xz -C /usr/local/bin
  variables:
    COVERALLS_PARALLEL: true
    COVERALLS_FLAG_NAME: "integration-tests"
    COVERALLS_SERVICE_NAME: "gitlab-ci"
    COVERALLS_GIT_BRANCH: $PARENT_MENDER_MCU_COMMIT_BRANCH
    COVERALLS_GIT_COMMIT: $MENDER_MCU_REVISION
    COVERALLS_REPO_TOKEN: $MENDER_MCU_COVERALLS_TOKEN
  script:
    #  replace the path in the coverage file
    - sed -i "s;/zephyr-workspace-cache/modules/mender-mcu/;;g" tests/integration/coverage.lcov
    - wget -qO- https://github.com/mendersoftware/mender-mcu/archive/${MENDER_MCU_REVISION}.tar.gz/ | tar xz
    - cd mender-mcu-${MENDER_MCU_REVISION} && cp ../tests/integration/coverage.lcov .
    - coveralls report --build-number $PARENT_MENDER_MCU_PIPELINE_ID
  rules:
    # Only publish coverage if the pipeline is triggered and the branch is protected
    - if: $CI_PIPELINE_SOURCE == "pipeline" && $CI_COMMIT_REF_PROTECTED == "true"
